{"version":3,"sources":["components/login/LoginForm.js","components/signup/SignupForm.js","components/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","useFormik","initialValues","email","password","validationSchema","Yup","required","validateOnChange","handleBlur","handleChange","handleSubmit","values","touched","errors","Container","maxWidth","Box","component","className","onSubmit","Typography","variant","TextField","error","helperText","margin","fullWidth","size","label","value","onChange","onBlur","type","id","name","FormGroup","style","float","FormControlLabel","control","Checkbox","Button","SignupForm","passwordConfirmation","min","max","oneOf","HomePage","color","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d25b883e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./login.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Checkbox,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Container,\r\n} from \"@mui/material\";\r\n\r\nconst LoginForm = () => {\r\n  const { handleBlur, handleChange, handleSubmit, values, touched, errors } =\r\n    useFormik({\r\n      initialValues: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      validationSchema: Yup.object({\r\n        email: Yup.string().email(\"Enter a valid email\").required(\"Required\"),\r\n        password: Yup.string().required(\"Required\"),\r\n      }),\r\n      validateOnChange: false,\r\n    });\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Box component=\"form\" className=\"Login\" onSubmit={handleSubmit}>\r\n        <Typography className=\"title\" variant=\"h4\" component=\"h4\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        <TextField\r\n          error={touched.email && errors.email ? true : false}\r\n          helperText={touched.email && errors.email}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          size=\"small\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          type=\"text\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <TextField\r\n          error={touched.password && errors.password ? true : false}\r\n          helperText={touched.password && errors.password}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          size=\"small\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <FormGroup style={{ float: \"left\" }}>\r\n          <FormControlLabel\r\n            control={<Checkbox size=\"small\" />}\r\n            label=\"Remember me\"\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          className=\"submit-button\"\r\n          fullWidth\r\n          size=\"medium\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./signup.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { TextField, Box, Button, Typography, Container } from \"@mui/material\";\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst SignupForm = () => {\r\n  const { handleBlur, handleSubmit, handleChange, values, touched, errors } =\r\n    useFormik({\r\n      initialValues: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirmation: \"\",\r\n      },\r\n      validationSchema: Yup.object({\r\n        name: Yup.string()\r\n          .min(8, \"Username must be between 8 and 32 characters long.\")\r\n          .max(16, \"Username must be between 8 and 32 characters long.\")\r\n          .required(\"Required\"),\r\n        email: Yup.string().email(\"Enter a valid email\").required(\"Required\"),\r\n        password: Yup.string()\r\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n          .required(\"Required\"),\r\n        passwordConfirmation: Yup.string()\r\n          .oneOf([Yup.ref(\"password\")], \"password didnâ€™t match\")\r\n          .required(\"Required\"),\r\n      }),\r\n      validateOnChange: false,\r\n    });\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Box component=\"form\" className=\"Signup\" onSubmit={handleSubmit}>\r\n        <Typography className=\"title\" variant=\"h4\" component=\"h4\">\r\n          Sign up\r\n        </Typography>\r\n\r\n        <TextField\r\n          error={touched.name && errors.name ? true : false}\r\n          helperText={touched.name && errors.name}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          size=\"small\"\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          value={values.name}\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n        />\r\n        <TextField\r\n          error={touched.email && errors.email ? true : false}\r\n          helperText={touched.email && errors.email}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          size=\"small\"\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          type=\"text\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <TextField\r\n          error={touched.password && errors.password ? true : false}\r\n          helperText={touched.password && errors.password}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          size=\"small\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <TextField\r\n          error={\r\n            touched.passwordConfirmation && errors.passwordConfirmation\r\n              ? true\r\n              : false\r\n          }\r\n          helperText={\r\n            touched.passwordConfirmation && errors.passwordConfirmation\r\n          }\r\n          margin=\"normal\"\r\n          fullWidth\r\n          size=\"small\"\r\n          label=\"Re-type password\"\r\n          variant=\"outlined\"\r\n          value={values.passwordConfirmation}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          type=\"password\"\r\n          id=\"passwordConfirmation\"\r\n          name=\"passwordConfirmation\"\r\n        />\r\n        <Button\r\n          className=\"submit-button\"\r\n          fullWidth\r\n          size=\"medium\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Sign up\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport \"./home.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Box component=\"div\" className=\"Home\">\r\n      <Typography variant=\"h2\" component=\"h2\">\r\n        Formik\r\n      </Typography>\r\n      <Typography variant=\"span\" component=\"span\">\r\n        Signup and login form using formik and yup validation\r\n      </Typography>\r\n      <Typography variant=\"h6\" component=\"h6\">\r\n        Click buttons to check forms.\r\n      </Typography>\r\n      <Box component=\"div\" className=\"buttons\">\r\n        <Button variant=\"contained\" size=\"large\" color=\"secondary\">\r\n          <Link to=\"/signup\">Signup</Link>\r\n        </Button>\r\n        <Button variant=\"contained\" size=\"large\">\r\n          <Link to=\"/login\">Login</Link>\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import \"./App.css\";\nimport LoginForm from \"./components/login/LoginForm\";\nimport SignupForm from \"./components/signup/SignupForm\";\nimport HomePage from \"./components/home/Home\";\nimport { Box } from \"@mui/material\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Box component=\"div\" className=\"App\">\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/signup\" component={SignupForm} />\n          <Route path=\"/login\" component={LoginForm} />\n        </Box>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}